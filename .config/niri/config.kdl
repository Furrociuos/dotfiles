// This config is in the KDL format: https://kdl.dev
// "/-" comments out the following node.
// Check the wiki for a full description of the configuration:
// https://github.com/YaLTeR/niri/wiki/Configuration:-Overview

// Input device configuration.
// Find the full list of options on the wiki:
// https://github.com/YaLTeR/niri/wiki/Configuration:-Input
input {
    keyboard {
        xkb {
            // You can set rules, model, layout, variant and options.
            // For more information, see xkeyboard-config(7).

            // For example:
            // layout "us,ru"
            // options "grp:win_space_toggle,compose:ralt,ctrl:nocaps"
        }
      numlock
    }

    // Next sections include libinput settings.
    // Omitting settings disables them, or leaves them at their default values.
    touchpad {
        tap
        // dwt
        // dwtp
        // drag-lock
        natural-scroll
        // accel-speed 0.2
        accel-profile "adaptive"
        scroll-method "two-finger"
    }

    mouse {
        // off
        // natural-scroll
        // accel-speed 0.2
         accel-profile "flat"
        // scroll-method "no-scroll"
    }
    
    focus-follows-mouse max-scroll-amount="0%"
}

// You can configure outputs by their name, which you can find
// by running `niri msg outputs` while inside a niri instance.
// The built-in laptop monitor is usually called "eDP-1".
// Find more information on the wiki:
// https://github.com/YaLTeR/niri/wiki/Configuration:-Outputs
// Remember to uncomment the node by removing "/-"!

output "eDP-1" {
	mode "1920x1080@165"
	position x=0 y=0
}

output "HDMI-A-2" {
	position x=1920 y=0
}
	

// Settings that influence how windows are positioned and sized.
// Find more information on the wiki:
// https://github.com/YaLTeR/niri/wiki/Configuration:-Layout
layout {
    gaps 10
    background-color "transparent"
    center-focused-column "never"

    preset-column-widths {
        proportion 0.33333
        proportion 0.5
        proportion 0.66667
    }

    default-column-width { proportion 0.5; }

    focus-ring {
      off
    }

    border {
        width 4
        active-color "#7aa3f7"
        inactive-color "#50505090"
    }

    tab-indicator {
      hide-when-single-tab
      place-within-column
      gap 5
      width 8
      length total-proportion=1.0
      position "top"
      gaps-between-tabs 2
      corner-radius 8
      active-color "red"
      inactive-color "gray"
      urgent-color "blue"
    }
}

// STARTUP

spawn-at-startup "udiskie"
spawn-at-startup "swayosd-server"
spawn-at-startup "~/AppImages/caprine.appimage"
spawn-at-startup "/usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1"
spawn-at-startup "way-edges"
spawn-at-startup "nwg-wrapper" "-s" "clock.sh" "-c" "clock.css" "-r" "1000" "-j" "center" "-a" "start" "-p" "left" "-ml" "150" "-mt" "150"

	
// You can change the path where screenshots are saved.
// A ~ at the front will be expanded to the home directory.
// The path is formatted with strftime(3) to give you the screenshot date and time.
screenshot-path "~/Pictures/Screenshots/Screenshot from %Y-%m-%d %H-%M-%S.png"


// Animation settings.
// The wiki explains how to configure individual animations:
// https://github.com/YaLTeR/niri/wiki/Configuration:-Animations
animations {

    workspace-switch {
        spring damping-ratio=1.0 stiffness=1000 epsilon=0.0001
    }

    window-open {
        duration-ms 150
        curve "ease-out-expo"
    }

    window-close {
        duration-ms 150
        curve "ease-out-quad"
    }

    horizontal-view-movement {
        spring damping-ratio=1.0 stiffness=800 epsilon=0.0001
    }

    window-movement {
        spring damping-ratio=1.0 stiffness=800 epsilon=0.0001
    }

    window-resize {
        spring damping-ratio=1.0 stiffness=800 epsilon=0.0001
    }

    config-notification-open-close {
        spring damping-ratio=0.6 stiffness=1000 epsilon=0.001
    }

    screenshot-ui-open {
        duration-ms 200
        curve "ease-out-quad"
    }

    overview-open-close {
        spring damping-ratio=1.0 stiffness=800 epsilon=0.0001
    }

}

// WINDOW RULES

window-rule {
  match app-id="vesktop"
  match app-id="Caprine"
    open-on-output "eDP-1"
		open-maximized true
}

window-rule {
  match app-id=r#"^steam_app"#
  match app-id=r#"^Minecraft"#
  match app-id="gamescope"
  match app-id="zenlesszonezero.exe"
  match title="UNDERTALE"
  match app-id="org.eden_emu.eden"
  match app-id="eden"
		open-focused true
    open-maximized true
}

window-rule {
    match app-id=r#"firefox$"# title="^Picture-in-Picture$"
    match app-id="qt-sudo"
    match app-id="resolve" title="resolve"
    match app-id="Ryujinx" title="ContentDialogOverlayWindow"
    exclude title="â€” Kdenlive^"
     open-floating true
}

window-rule {
  match app-id="steam" title="Steam Big Picture Mode"
    open-focused true
    open-maximized true
}

window-rule {
    match app-id="steam" title=r#"^notificationtoasts_\d+_desktop$"#
      default-floating-position x=10 y=10 relative-to="bottom-right"
      open-focused false
}

// Example: block out two password managers from screen capture.
// (This example rule is commented out with a "/-" in front.)
window-rule {
    match app-id=r#"^org\.keepassxc\.KeePassXC$"#
    match app-id=r#"^org\.gnome\.World\.Secrets$"#
    match app-id="Proton Pass"

    block-out-from "screen-capture"

    // Use this instead if you want them visible on third-party screenshot tools.
    // block-out-from "screencast"
}

// Example: enable rounded corners for all windows.
// (This example rule is commented out with a "/-" in front.)
window-rule {
    geometry-corner-radius 12
    clip-to-geometry true
}

window-rule {
  match is-floating=true
  exclude is-focused=true
    baba-is-float true
}

binds {
    // Keys consist of modifiers separated by + signs, followed by an XKB key name
    // in the end. To find an XKB name for a particular key, you may use a program
    // like wev.
    //
    // "Mod" is a special modifier equal to Super when running on a TTY, and to Alt
    // when running as a winit window.
    //
    // Most actions that you can bind here can also be invoked programmatically with
    // `niri msg action do-something`.

    // Mod-Shift-/, which is usually the same as Mod-?,
    // shows a list of important hotkeys.
    Mod+Shift+Slash { show-hotkey-overlay; }

    // Suggested binds for running programs: terminal, app launcher, screen locker.
    Mod+Return { spawn "ghostty"; }
    Mod+D { spawn "fuzzel"; }
    Super+Alt+L { spawn "~/.config/rofi/powermenu/type-1/powermenu.sh"; }
  	Super+B { spawn "brave" "-enable-features=TouchpadOverscrollHistoryNavigation"; }
	  Alt+Space { spawn "sh" "-c" "pkill rofi || rofi -show drun"; }
    Super+Space {spawn "sh" "-c" "pkill rofi || rofi -show run"; }
	  XF86Presentation { spawn "~/Scripts/BigPicture.sh"; }
	  Super+E { spawn "nautilus"; }
    Super+N { spawn "sh" "-c" "curd -rofi -image-preview"; }
    Super+Z { spawn "pulsecontrol"; }
    Super+W { spawn "sh" "-c" "pkill rofi || ~/Scripts/WifiMenu.sh"; }
    Super+Q { spawn "sh" "-c" "pkill rofi || ~/Scripts/BluetoothMenu.sh"; }
    Mod+X { spawn "vesktop"; }
	
    XF86AudioRaiseVolume allow-when-locked=true { spawn "swayosd-client" "--output-volume" "raise"; }
    XF86AudioLowerVolume allow-when-locked=true { spawn "swayosd-client" "--output-volume" "lower" ; }
    XF86AudioMute        allow-when-locked=true { spawn "swayosd-client" "--output-volume" "mute-toggle"; }
    Super+M     allow-when-locked=true { spawn "swayosd-client" "--input-volume" "mute-toggle"; }
    Mod+P allow-when-locked=true { spawn "playerctl" "play-pause"; }

    XF86MonBrightnessUp allow-when-locked=true { spawn "swayosd-client" "--brightness" "raise"; }
    XF86MonBrightnessDown allow-when-locked=true { spawn "swayosd-client" "--brightness" "lower"; }

    Alt+W { close-window; }
    Alt+F4 { close-window; }
    Mod+Tab { toggle-overview; }

    Mod+H     { focus-column-left; }
    Mod+L     { focus-column-right; }

    Mod+Ctrl+H     { move-column-left; }
    Mod+Ctrl+L     { move-column-right; }
    Mod+J     { focus-window-or-workspace-down; }
    Mod+K     { focus-window-or-workspace-up; }
    Mod+Ctrl+J     { move-window-down-or-to-workspace-down; }
    Mod+Ctrl+K     { move-window-up-or-to-workspace-up; }

    Mod+Home { focus-column-first; }
    Mod+End  { focus-column-last; }
    Mod+Ctrl+Home { move-column-to-first; }
    Mod+Ctrl+End  { move-column-to-last; }

    Mod+Shift+Left  { focus-monitor-left; }
    Mod+Shift+Down  { focus-monitor-down; }
    Mod+Shift+Up    { focus-monitor-up; }
    Mod+Shift+Right { focus-monitor-right; }
    Mod+Shift+H     { focus-monitor-left; }
    Mod+Shift+J     { focus-monitor-down; }
    Mod+Shift+K     { focus-monitor-up; }
    Mod+Shift+L     { focus-monitor-right; }

    Mod+Shift+Ctrl+H     { move-column-to-monitor-left; }
    Mod+Shift+Ctrl+J     { move-column-to-monitor-down; }
    Mod+Shift+Ctrl+K     { move-column-to-monitor-up; }
    Mod+Shift+Ctrl+L     { move-column-to-monitor-right; }


    Mod+Page_Down      { focus-workspace-down; }
    Mod+Page_Up        { focus-workspace-up; }
    Mod+Ctrl+Page_Down { move-column-to-workspace-down; }
    Mod+Ctrl+Page_Up   { move-column-to-workspace-up; }


    Mod+Shift+Page_Down { move-workspace-down; }
    Mod+Shift+Page_Up   { move-workspace-up; }
    Mod+Shift+U         { move-workspace-down; }
    Mod+Shift+I         { move-workspace-up; }

    Alt+Tab { focus-monitor-next; }
    
    Ctrl+Mod+WheelScrollDown      cooldown-ms=150 { focus-workspace-down; }
    Ctrl+Mod+WheelScrollUp        cooldown-ms=150 { focus-workspace-up; }
    Mod+Shift+WheelScrollDown cooldown-ms=150 { move-column-to-workspace-down; }
    Mod+Shift+WheelScrollUp   cooldown-ms=150 { move-column-to-workspace-up; }

    Mod+WheelScrollRight      { focus-column-right; }
    Mod+WheelScrollLeft       { focus-column-left; }
    Mod+Shift+WheelScrollRight { move-column-right; }
    Mod+Shift+WheelScrollLeft  { move-column-left; }

    Mod+WheelScrollDown      { focus-column-right; }
    Mod+WheelScrollUp        { focus-column-left; }
    Mod+Ctrl+Shift+WheelScrollDown { move-column-right; }
    Mod+Ctrl+Shift+WheelScrollUp   { move-column-left; }

    Mod+1 { focus-workspace 1; }
    Mod+2 { focus-workspace 2; }
    Mod+3 { focus-workspace 3; }
    Mod+4 { focus-workspace 4; }
    Mod+5 { focus-workspace 5; }
    Mod+6 { focus-workspace 6; }
    Mod+7 { focus-workspace 7; }
    Mod+8 { focus-workspace 8; }
    Mod+9 { focus-workspace 9; }
    Mod+Shift+1 { move-column-to-workspace 1; }
    Mod+Shift+2 { move-column-to-workspace 2; }
    Mod+Shift+3 { move-column-to-workspace 3; }
    Mod+Shift+4 { move-column-to-workspace 4; }
    Mod+Shift+5 { move-column-to-workspace 5; }
    Mod+Shift+6 { move-column-to-workspace 6; }
    Mod+Shift+7 { move-column-to-workspace 7; }
    Mod+Shift+8 { move-column-to-workspace 8; }
    Mod+Shift+9 { move-column-to-workspace 9; }

    Mod+BracketLeft  { consume-or-expel-window-left; }
    Mod+BracketRight { consume-or-expel-window-right; }

    Mod+Comma  { consume-window-into-column; }
    Mod+Period { expel-window-from-column; }

    Mod+R { switch-preset-column-width; }
    Mod+Alt+R { switch-preset-window-height; }
    Mod+Ctrl+R { reset-window-height; }
    Mod+F { maximize-column; }
    Mod+Shift+F { fullscreen-window; }

    Mod+Ctrl+F { expand-column-to-available-width; }

    Mod+C { center-column; }

    Mod+Minus { set-column-width "-10%"; }
    Mod+Equal { set-column-width "+10%"; }

    Mod+Shift+Minus { set-window-height "-10%"; }
    Mod+Shift+Equal { set-window-height "+10%"; }

    Mod+V       { toggle-window-floating; }
    Mod+Shift+V { switch-focus-between-floating-and-tiling; }

    Mod+S { toggle-column-tabbed-display; }

    Print { screenshot; }
    Ctrl+Print { screenshot-screen; }
    Alt+Print { screenshot-window; }

    Mod+Escape allow-inhibiting=false { toggle-keyboard-shortcuts-inhibit; }

    Mod+Shift+E { quit; }

    Mod+Shift+P { power-off-monitors; }

  	Mod+Shift+R { spawn "systemctl" "--user" "restart" "waybar" ; }

    Mod+F1 { set-dynamic-cast-window; }
    Mod+F2 { set-dynamic-cast-monitor; }
    mod+F3 { clear-dynamic-cast-target; }
}
	environment {
      XDG_CURRENT_DESKTOP "niri"
      XDG_SESSION_TYPE "wayland"
			QT_QPA_PLATFORM "wayland"
      QT_QPA_PLATFORMTHEME "gtk3"
      QT_WAYLAND_DISABLE_WINDOWDECORATION "1"
      GSK_RENDERER "gl"
      MOZ_ENABLE_WAYLAND "1"
      NVD_BACKEND "direct"
      ELECTRON_OZONE_PLATFORM_HINT "wayland"
		}
	
hotkey-overlay {
    skip-at-startup
}

cursor {
    xcursor-theme "Bibata-Modern-Classic"
    xcursor-size 20

    hide-when-typing
    hide-after-inactive-ms 5000
}

debug {
  wait-for-frame-completion-in-pipewire
}

gestures {
  hot-corners {
    off
  }
}

layer-rule {
    match namespace="^wallpaper$"
    place-within-backdrop true
}

prefer-no-csd
